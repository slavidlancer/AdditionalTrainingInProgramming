function slide=upr2
% This is a slideshow file for use with playshow.m and makeshow.m
% To see it run, type 'playshow upr2', 

% Copyright (c) 1984-98 by The MathWorks, Inc.
if nargout<1,
  playshow upr2
else
  %========== Slide 1 ==========

  slide(1).code={
   'DATA = imread(''upr251.bmp'');',
   'imshow(DATA);',
   'imwrite(DATA, ''myfile.bmp'');',
   '' };
slide(1).text={
   '',
   '',
   '                                   Лабораторно упражнение №2',
   '',
   '',
   '                                             ПЕРЦЕПТРОН'};
%========== Slide 2 ==========

  slide(2).code={
   'DATA = imread(''upr251.bmp'');',
   'imshow(DATA);',
   'imwrite(DATA, ''myfile.bmp'');',
   '',
   '' };
  slide(2).text={
   'Теоретична част:',
   '',
   '   Перцептронът представлява нелинеен неврон. При него се използва твърдо активационна функция Ф(v) от тип ограничenie /hard limiter/, която дава изход 0 или 1. С х се отбелязват входните сигнали, с w теглата свързани с всеки от сигналите и с b се означава отместването.',
   '   Входът на активационната функция v се дава с уравнение (1), където отклонението b може да се третира като теглови коефициент wo свързан със специален входен елемент хо, който винаги е активен т.е. хо=1.'};

  %========== Slide 3 ==========

  slide(3).code={
   'DATA = imread(''upr252.bmp'');',
   'imshow(DATA);',
   'imwrite(DATA, ''myfile.bmp'');',
   '',
   '' };

  slide(3).text={
   '   Изхода на неврона y се дава с уравнение (2), където Q е праг, който обикновенно е 0.',
   '   Един перцептрон разделя линейното пространство на входните сигнали x на t класа.',
   '   Два перцептрона могат да разделят пространството на входните сигнали на четири класа, както е изобразено съответно на фиг.2 и фиг.3.'
   '   Решението към кой клас принадлежи даден вектор се определя от това дали изхода на перцептрона е 0 или 1.'
   '   Алгоритъма за обучение на перцептрона е следния:',
   '-Задава се началният вектор с теглата, на стъпка t за елемента x(t) се '
};

  %========== Slide 4 ==========

  slide(4).code={
   'DATA = imread(''upr253.bmp'');',
   'imshow(DATA);',
   'imwrite(DATA, ''myfile.bmp'');',
   '',
   '' };

  slide(4).text={
   '   изчислява t=1,2,3...',
   '     -Изчислява се e=d-Ф(wTx(t)), където е е грешката, d e желаната стойност  на изхода на перцептрона за x(t).',
   '     -Теглата се променят съгласно флага w=w+ex(t), а отместването съгласно флага b=b+e.',
   '   -Процедурата се прекратява ако не се получи обновяване на коефициентите в рамките на един epoch.',
   '   При използване на повече от един перцептрон със същите входни сигнали формулите използвани в алгоритама се използват в матричен вид.'
   '',
   ''};

  
  %========== Slide 5 ==========

slide(5).code={
   'DATA = imread(''upra21.bmp'');',
   'imshow(DATA);',
   'imwrite(DATA, ''myfile.bmp'');',
   '',

   '' };
  slide(5).text={
     'Цел на лаботарорното упражнение:',
     '',
             ' При зададени двумерни входни елементи, със съответната им принадлежност за даден клас да се установи дали е възмжно да бъдат линейно разделени на два класа, чрез използване на един перцептрон.'};

  %========== Slide 6 ==========

  slide(6).code={
   'P = [ -0.5 -0.5 +0.3 -0.1 +0.5;  -0.5 +0.5 -0.5 +1.0 -1];',
   'T = [1 0 0 0 1];',
   ' plotpv(P,T);',
   '' };
  slide(6).text={
   'Начин на провеждане на лабораторното упражнение:',
   '',
   '  1. Задаваме колона от двумерни входни вектора'
   '        %P = [ -0.5 -0.5 +0.3 -0.1 +0.5;  -0.5 +0.5 -0.5 +1.0 -1]';'Задаваме принадлежността на входните вектори към един от двата класа посредством вектор с нули и единици.';
   '        %T = [1 0 0 0 1]'; 'Изчератване на векрорите';
   '        %plotpv(P,T)';
};

  %========== Slide 7 ==========

slide(7).code={
   'net=newp([-1 1;-1 1],1);',
   ' plotpv(P,T);',
   'linehandle=plotpc(net.IW{1},net.b{1});',
   'plotpv(P,T);',
   '    linehandle=plotpc(net.IW{1},net.b{1});',
   '   E=1;',
   '   net=init(net);',
   '   linehandle=plotpc(net.IW{1},net.b{1});',
   '   while (sse(E))',
   '   [net,Y,E]=adapt(net,P,T);',
   '      linehandle=plotpc(net.IW{1},net.b{1},linehandle);',
   '      drawnow;',
   '  end;',
   }
     slide(7).text={
     '  2. Перцептрона трябва да раздели входните вектори на два класа зададени с вектова T. ',
     'тези неврони могат да разделят входните елементи само с права линия на два калса.'
     '%net=newp([-1 1;-1 1],1)';
     '%plotpv(P,T)';
     '%linehandle=plotpc(net.IW{1},net.b{1})';
     '%plotpv(P,T)';'Началното изчертаване на линията съответстваща на началната инициализация на прцептрона. ';
       };
       %========== Slide 8 ==========
  slide(8).code={
     'net=newp([-1 1;-1 1],1);',
   ' plotpv(P,T);',
   'linehandle=plotpc(net.IW{1},net.b{1});',
   'plotpv(P,T);',
   '    linehandle=plotpc(net.IW{1},net.b{1});',
   '   E=1;',
   '   net=init(net);',
   '   linehandle=plotpc(net.IW{1},net.b{1});',
   '   while (sse(E))',
   '   [net,Y,E]=adapt(net,P,T);',
   '      linehandle=plotpc(net.IW{1},net.b{1},linehandle);',
   '      drawnow;',
   '  end;',
   '',
   '' };

   slide(8).text={
     '%linehandle=plotpc(net.IW{1},net.b{1})';
     '%E=1';
     '%net=init(net)';
     '%linehandle=plotpc(net.IW{1},net.b{1})';
     '%while (sse(E))';
     '%[net,Y,E]=adapt(net,P,T)';
     '%linehandle=plotpc(net.IW{1},net.b{1},linehandle)';
     '%drawnow';
     '%end';
     'Изчертаване на окончателната разделителна линия, съответстваща на';
  };
  %========== Slide 9 ==========
  slide(9).text={
' теглата и отместването след обучението.'
}
  end